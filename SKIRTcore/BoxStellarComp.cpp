/*//////////////////////////////////////////////////////////////////
////       SKIRT -- an advanced radiative transfer code         ////
////       Â© Astronomical Observatory, Ghent University         ////
///////////////////////////////////////////////////////////////// */

#include "BoxStellarComp.hpp"
#include "FatalError.hpp"

using namespace std;

//////////////////////////////////////////////////////////////////////

BoxStellarComp::BoxStellarComp()
{
}

//////////////////////////////////////////////////////////////////////

void BoxStellarComp::setupSelfBefore()
{
    StellarComp::setupSelfBefore();

    if (_xmax <= _xmin)
        throw FATALERROR("The extent of the box should be positive in the X direction");
    if (_ymax <= _ymin)
        throw FATALERROR("The extent of the box should be positive in the Y direction");
    if (_zmax <= _zmin)
        throw FATALERROR("The extent of the box should be positive in the Z direction");
}

//////////////////////////////////////////////////////////////////////

void BoxStellarComp::setMinX(double value)
{
    _xmin = value;
}

//////////////////////////////////////////////////////////////////////

double BoxStellarComp::minX() const
{
    return _xmin;
}

//////////////////////////////////////////////////////////////////////

void BoxStellarComp::setMaxX(double value)
{
    _xmax = value;
}

//////////////////////////////////////////////////////////////////////

double BoxStellarComp::maxX() const
{
    return _xmax;
}

//////////////////////////////////////////////////////////////////////

void BoxStellarComp::setMinY(double value)
{
    _ymin = value;
}

//////////////////////////////////////////////////////////////////////

double BoxStellarComp::minY() const
{
    return _ymin;
}

//////////////////////////////////////////////////////////////////////

void BoxStellarComp::setMaxY(double value)
{
    _ymax = value;
}

//////////////////////////////////////////////////////////////////////

double BoxStellarComp::maxY() const
{
    return _ymax;
}

//////////////////////////////////////////////////////////////////////

void BoxStellarComp::setMinZ(double value)
{
    _zmin = value;
}

//////////////////////////////////////////////////////////////////////

double BoxStellarComp::minZ() const
{
    return _zmin;
}

//////////////////////////////////////////////////////////////////////

void BoxStellarComp::setMaxZ(double value)
{
    _zmax = value;
}

//////////////////////////////////////////////////////////////////////

double BoxStellarComp::maxZ() const
{
    return _zmax;
}

//////////////////////////////////////////////////////////////////////

int BoxStellarComp::dimension() const
{
    return 3;
}

//////////////////////////////////////////////////////////////////////
